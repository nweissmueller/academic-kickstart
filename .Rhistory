blogdown::build_site()
blogdown::install_hugo()
blogdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
##
# install.packages("TraMineR")
library(TraMineR)
data("mvad")
# Load the library, retrieve the mvad data and create a state sequence object
# from the status variables (columns 17 to 86):
mvad_alphab = c("employment", "FE", "HE", "joblessness","school", "training")
mvad_seq = seqdef(mvad, 17:86, xtstep = 6, alphabet = mvad_alphab)
# Compute pairwise optimal matching (OM) distances between sequences with an
# insertion/deletion cost of 1 and a substitution cost matrix based on observed
# transition rates:
mvad_om = seqdist(mvad_seq, method = "OM", indel = 1, sm = "TRATE")
# Proceed to an agglomerative hierarchical clustering using the obtained distance
# matrix, select the four-clusters solution and express it as a factor:
library(cluster)
clusterward = agnes(mvad_om, diss = TRUE, method = "ward")
mvad_cl4 = cutree(clusterward, k = 4)
cl4_lab = factor(mvad_cl4, labels = paste("Cluster", 1:4))
# Visualize the cluster patterns by plotting their transversal state distributions:
seqdplot(mvad_seq, group = cl4_lab, border = NA)
## Alluvial
library(tidyverse)
library(readr)
df = readr::read_csv(file = "pathway_alluvial.csv")
## alluvial
# install.packages("ggalluvial")
library(ggalluvial)
is_alluvia_form(df, axes = 1:3, silent = TRUE)
## plot
p = ggplot(df,aes(y = freq, axis1 = lot, axis2 = tx, axis3 = pathway)) +
geom_alluvium(aes(fill = pathway),
width = 0, knot.pos = 0, reverse = FALSE) +
guides(fill = FALSE) +
geom_stratum(width = 1/8, reverse = FALSE) +
geom_text(stat = "stratum", infer.label = TRUE, reverse = FALSE) +
scale_x_continuous(breaks = 1:3, labels = c("LoT", "Treatment", "Pathway")) +
theme_bw() +
# coord_flip()+
ggtitle("Tratment pathways by NCCN guidelines")
p
install.packages("traj")
library(traj)
